info.app_name=${spring.application.name}
info.build.artifactId=ms-restaurant-service
info.build.groupId=com.jet.restaurants.service.restaurants

management.endpoint.health.group.readiness.include=readinessState,db
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,info,prometheus,configprops,metrics
management.metrics.distribution.percentiles-histogram.http.server.requests=true

management.metrics.tags.app.name=${spring.application.name}
management.metrics.tags.env=${info.env}
management.metrics.tags.version=${info.tag}

spring.application.description=Microservice for source of restaurant status with the detail of restaurants
spring.application.name=ms-restaurant-service
spring.jmx.enabled=true

#KAFKA configurations
kafka.bootstrapServer=localhost:9092
kafka.topic.restaurant.change-status=restaurants-status
kafka.consumers.consumerGroup=justeat-consumer
kafka.consumers.consumerGroup.maxPollRecords=3
kafka.consumers.consumerGroup.concurrency=1

server.port=8081

spring.jpa.generate-ddl=true
spring.datasource.initialization-mode=always
spring.jpa.show-sql=true
spring.datasource.password=justeat
spring.datasource.username=justeat
spring.datasource.url=jdbc:postgresql://172.29.130.116:9001/restaurant-status-db

